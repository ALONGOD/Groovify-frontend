body {
    margin: 0;
    padding: 0;
}

.app {
    height: 100vh;
    width: 100vw;

    display: grid;
    grid-template-columns: minmax(15%, 20%) 1fr;

    background-color: $bg-main;

    gap: 0.5em;

    margin: 0;
    padding: 0.5em;

    // Both sidebars open
    &:has(aside.menu-sidebar:not(.collapsed)):has(aside.details-sidebar.open) {
        grid-template-columns: minmax(180px, 320px) minmax(500px, 1fr) minmax(300px, 20%);
    }

    // Menu sidebar collapsed, details sidebar open
    &:has(aside.menu-sidebar.collapsed):has(aside.details-sidebar.open) {
        grid-template-columns: 60px minmax(500px, 1fr) minmax(300px, 20%);
    }

    // Details sidebar closed, menu sidebar open
    &:has(aside.menu-sidebar:not(.collapsed)):has(aside.details-sidebar.closed) {
        grid-template-columns: minmax(180px, 320px) minmax(500px, 1fr);
    }

    // Both sidebars collapsed
    &:has(aside.menu-sidebar.collapsed):has(aside.details-sidebar.closed) {
        grid-template-columns: 60px minmax(500px, 1fr);
    }


    @media (max-width: 768px) {
        // Both sidebars open, narrower details sidebar
        &:has(aside.menu-sidebar:not(.collapsed)):has(aside.details-sidebar.open) {
            grid-template-columns: minmax(180px, 320px) minmax(500px, 1fr) minmax(250px, 15%);
        }

        // Menu sidebar collapsed, details sidebar open, narrower details sidebar
        &:has(aside.menu-sidebar.collapsed):has(aside.details-sidebar.open) {
            grid-template-columns: 60px minmax(500px, 1fr) minmax(250px, 15%);
        }

        // Details sidebar closed, menu sidebar open
        &:has(aside.menu-sidebar:not(.collapsed)):has(aside.details-sidebar.closed) {
            grid-template-columns: minmax(180px, 320px) minmax(500px, 1fr);
        }

        // Both sidebars collapsed
        &:has(aside.menu-sidebar.collapsed):has(aside.details-sidebar.closed) {
            grid-template-columns: 60px minmax(500px, 1fr);
        }
    }
}

main {
    @include component-layout;
    border-radius: 0.6em;
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    grid-column: 2;
    height: $height-main;
    overflow-y: auto;
}

.main-container {
    display: grid;
    grid-template-columns: 1rem 1fr 1rem;

    > * {
        grid-column: 2;

        &.full {
            grid-column: 1 / -1;
        }
    }
}

.stationd-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    grid-gap: 20px;
}
